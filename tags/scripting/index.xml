<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Scripting on Henrik Sommerfeld's blog</title><link>https://www.henriksommerfeld.se/tags/scripting/</link><description>Recent content in Scripting on Henrik Sommerfeld's blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 08 Apr 2020 14:02:21 +0200</lastBuildDate><atom:link href="https://www.henriksommerfeld.se/tags/scripting/index.xml" rel="self" type="application/rss+xml"/><item><title>Asuswrt-Merlin Firmware Update Checker</title><link>https://www.henriksommerfeld.se/asuswrt-merlin-firmware-update-checker/</link><pubDate>Wed, 08 Apr 2020 14:02:21 +0200</pubDate><guid>https://www.henriksommerfeld.se/asuswrt-merlin-firmware-update-checker/</guid><description>I have an Asus RT-AC68U router at home. I’ve previously used the build-in update checker together with a notification script that ran on the router itself. Recently I noticed that I hadn’t got any update notifications in a long time, one of the downsides of silent failures. This is my custom code that looks for updates.</description></item><item><title>Firmware Update Notifications for My Asus Router</title><link>https://www.henriksommerfeld.se/firmware-update-notifications-for-my-asus-router/</link><pubDate>Tue, 31 Jul 2018 11:14:58 +0200</pubDate><guid>https://www.henriksommerfeld.se/firmware-update-notifications-for-my-asus-router/</guid><description>Even though there is an app for my Asus RT-AC68U router with the default firmware, it hasn&amp;rsquo;t worked that well for me and I wanted reliable firmware update notifications. I found that this has been done by others, but still, there are a few steps to go through, so I&amp;rsquo;m documenting them here. This works for several other Asus router models as well, see the list of supported routers.
Installing Custom Firmware The first step I took was to install the custom firmware Asuswrt-Merlin.</description></item><item><title>Inventory of Page Layout Usage in a SharePoint Site</title><link>https://www.henriksommerfeld.se/inventory-of-page-layout-usage-in-a-sharepoint-site/</link><pubDate>Tue, 24 Mar 2015 23:05:12 +0000</pubDate><guid>https://www.henriksommerfeld.se/inventory-of-page-layout-usage-in-a-sharepoint-site/</guid><description>Recently I got a request to find out the usage of page layouts on a large SharePoint site. I Googled and found a few scripts, but none that did all I wanted, e.g. to limit the inventory to a certain sub-site. So I wrote my own one.</description></item><item><title>Bypassing a Corporate Proxy</title><link>https://www.henriksommerfeld.se/bypassing-a-corporate-proxy/</link><pubDate>Sun, 01 Mar 2015 09:32:04 +0000</pubDate><guid>https://www.henriksommerfeld.se/bypassing-a-corporate-proxy/</guid><description>Quite a few organisations seems to find this thing called “Internet” a scary thing that employees can only be given access to by grace of the mighty network administrators. As a consultant I have worked for a few of those organisations and felt the frustration when a blog is blocked or network traffic is so slow that you&amp;rsquo;d guess that it&amp;rsquo;s manually monitored before accepted. I would personally never try to bypass these controls of course, but hypothetically one could do like the following.</description></item><item><title>A beginner’s experiences of unit testing Javascript</title><link>https://www.henriksommerfeld.se/a-beginners-experiences-of-unit-testing-javascript/</link><pubDate>Sun, 07 Apr 2013 21:41:14 +0000</pubDate><guid>https://www.henriksommerfeld.se/a-beginners-experiences-of-unit-testing-javascript/</guid><description>As someone working mostly with SharePoint server-side code, unit tests are something that requires quite some investment in time to get rolling with – and consequently not being done. Javascript is a different thing though. Since a big part of most projects using SharePoint is (or should be) done with Javascript, we should be testing that code. (Of course this applies to any system with a web interface, but I assume most of you that don’t have SharePoint in your CV’s are already doing this).</description></item><item><title>Setting up an IIS Warm-up Script in an automated fashion</title><link>https://www.henriksommerfeld.se/setting-up-an-iis-warm-up-script-in-an-automated-fashion/</link><pubDate>Mon, 17 Dec 2012 19:57:04 +0000</pubDate><guid>https://www.henriksommerfeld.se/setting-up-an-iis-warm-up-script-in-an-automated-fashion/</guid><description>Automatic recycling of application pools in IIS may be necessary, but it can annoy the users how happen to be up at night or early in the morning (depending on when the recycles are scheduled). There are numerous warm-up scripts out there and I have just stolen one of them. The purpose of this post is to show you how I set it up to run automatically when the application pools are recycled.</description></item><item><title>Automatically Backup your Gmail account on a schedule with GMVault and Mac OS X launchd</title><link>https://www.henriksommerfeld.se/automatically-backup-your-gmail-account-on-a-schedule-with-gmvault-and-mac-os-x-launchd/</link><pubDate>Mon, 10 Dec 2012 21:09:15 +0000</pubDate><guid>https://www.henriksommerfeld.se/automatically-backup-your-gmail-account-on-a-schedule-with-gmvault-and-mac-os-x-launchd/</guid><description>While looking over my backup routines, I stumbled on Scott Hanselman&amp;rsquo;s post Automatically Backup your Gmail account on a schedule with GMVault and Windows Task Scheduler. I had never really thought about backing up my Gmail account, but why not. Even though I&amp;rsquo;m mainly a Windows guy, my Windows 8 machine at home is a big tower that requires quite a lot of electricity and is therefore only powered on when needed.</description></item></channel></rss>