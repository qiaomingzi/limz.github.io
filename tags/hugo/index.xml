<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo on Henrik Sommerfeld's blog</title><link>https://www.henriksommerfeld.se/tags/hugo/</link><description>Recent content in Hugo on Henrik Sommerfeld's blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 23 Jul 2020 18:47:00 +0200</lastBuildDate><atom:link href="https://www.henriksommerfeld.se/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>Search for Static Website Without External Service</title><link>https://www.henriksommerfeld.se/search-static-website-without-external-service/</link><pubDate>Thu, 23 Jul 2020 18:47:00 +0200</pubDate><guid>https://www.henriksommerfeld.se/search-static-website-without-external-service/</guid><description>When you have a static website, there are a few things that you usually don’t have out-of-the-box. One such thing is search. You can argue that you don’t need it, but if you want it and your site isn’t that large, I’ll describe how I’ve set it up without an external service.</description></item><item><title>Alpine.js – Benefits and Limitations</title><link>https://www.henriksommerfeld.se/alpinejs-benefits-and-limitations/</link><pubDate>Mon, 29 Jun 2020 06:21:00 +0200</pubDate><guid>https://www.henriksommerfeld.se/alpinejs-benefits-and-limitations/</guid><description>For the custom JavaScript code on my Hugo blog I use Alpine.js. I’ll discuss the benefits and the limitations in this post. This post is part 4 in the Hugo Pipeline Series, but the benefits and limitations I discuss are not specific to using Alpine.js together with Hugo.</description></item><item><title>Hugo Pipeline Series – Developing and Deploying</title><link>https://www.henriksommerfeld.se/hugo-pipeline-series-developing-and-deploying/</link><pubDate>Mon, 22 Jun 2020 06:21:00 +0200</pubDate><guid>https://www.henriksommerfeld.se/hugo-pipeline-series-developing-and-deploying/</guid><description>In terms of developing my Hugo site, I&amp;rsquo;ll focus on the JavaScript parts, since Hugo templates and CSS isn&amp;rsquo;t much to talk about. I use a few libraries that I&amp;rsquo;ve installed with npm and those need to be processed before they are sent to the browser. The JavaScript code I have written myself, does not have that requirement. In that case it&amp;rsquo;s just a matter of how old browsers I want to support.</description></item><item><title>Hugo Pipeline Series – Editing and Deploying</title><link>https://www.henriksommerfeld.se/hugo-pipeline-series-editing-and-deploying/</link><pubDate>Sun, 14 Jun 2020 22:12:00 +0200</pubDate><guid>https://www.henriksommerfeld.se/hugo-pipeline-series-editing-and-deploying/</guid><description>This is how I write and deploy content on this blog. I&amp;rsquo;ll describe how I work with images and JavaScript dependencies to keep building and deploying as quick as possible.</description></item><item><title>Hugo Pipeline Series – Intro</title><link>https://www.henriksommerfeld.se/hugo-pipeline-series-intro/</link><pubDate>Sun, 14 Jun 2020 22:11:00 +0200</pubDate><guid>https://www.henriksommerfeld.se/hugo-pipeline-series-intro/</guid><description>In this post(s) I&amp;rsquo;ll describe how I created my personal blog with a fair amount of work to achieve simplicity.</description></item><item><title>Lazy Loading Images in Hugo</title><link>https://www.henriksommerfeld.se/lazy-loading-images-in-hugo/</link><pubDate>Wed, 05 Feb 2020 04:42:21 +0100</pubDate><guid>https://www.henriksommerfeld.se/lazy-loading-images-in-hugo/</guid><description>When writing another post, I realised that I hadn&amp;rsquo;t documented/described my image lazy loading implementation in Hugo anywhere, so here it comes. The first thing we need are responsive images, not the thing you get when setting the width to 100% in CSS, but different versions of the same image in different resolutions so that the web browser can pick the best one (using srcset).</description></item><item><title>Gatsby vs Hugo for a Personal Blog</title><link>https://www.henriksommerfeld.se/gatsby-vs-hugo-for-personal-blog/</link><pubDate>Thu, 05 Dec 2019 22:20:34 +0100</pubDate><guid>https://www.henriksommerfeld.se/gatsby-vs-hugo-for-personal-blog/</guid><description>Having built two personal websites/blogs that are fairly similar, one using Gatsby and one using Hugo, I’ll take a moment to compare my experiences. All CSS is written from scratch for both sites, no framework. They both have categories and tags that you can use to find related posts. No server-side API is used, so once the build is done, everything is static. Well, I use Google Analytics and Disqus on both sites, but those are third-party API&amp;rsquo;s that I don&amp;rsquo;t have to manage.</description></item><item><title>Hugo Timeout Not a Circular Loop in Shortcode</title><link>https://www.henriksommerfeld.se/hugo-timeout-not-a-circular-loop-in-shortcode/</link><pubDate>Sat, 30 Nov 2019 18:19:09 +0100</pubDate><guid>https://www.henriksommerfeld.se/hugo-timeout-not-a-circular-loop-in-shortcode/</guid><description>I have been getting a few random build errors with Hugo on Netlify recently. This is a bit strange, since it builds fine on my local machine and with Github Actions. Re-running the same build also worked a few times. The build log on Netlify says the following&amp;hellip;</description></item><item><title>Build Steps Using NPM Scripts for My Hugo Blog</title><link>https://www.henriksommerfeld.se/build-steps-using-npm-scripts-for-my-hugo-blog/</link><pubDate>Sun, 17 Sep 2017 17:15:54 +0200</pubDate><guid>https://www.henriksommerfeld.se/build-steps-using-npm-scripts-for-my-hugo-blog/</guid><description>Quite recently I migrated this blog from WordPress to Hugo. Since I didn&amp;rsquo;t want to use a theme built by someone else, I had to add things like CSS and JavaScript myself. To be able to work with this locally in an efficient way and to be able to produce a complete build output in a reproducible manner, I had to automate the build steps. With WordPress I used Gulp for this, but I thought that might not be needed, so I made an attempt to do this using only npm scripts.</description></item><item><title>Switching from WordPress to Hugo</title><link>https://www.henriksommerfeld.se/switching-from-wordpress-to-hugo/</link><pubDate>Mon, 07 Aug 2017 21:25:57 +0200</pubDate><guid>https://www.henriksommerfeld.se/switching-from-wordpress-to-hugo/</guid><description>I have recently migrated my blog from WordPress to Hugo. That is, switching from a database-based web content management system with loads of themes, plugins and a large user base to a statically generated site with no server-side logic and a small feature set where I must build most things myself.
The switch was by no means necessary, I had cheap hosting at a web hotel I will still use for other sites after the migration, speed was good with WP Super Cache and so on.</description></item></channel></rss>